"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Contract = void 0;
const contract_api_js_1 = require("../../integrations/contract.api.js");
const Client_js_1 = require("./Client.js");
/**
 * Contract class handles interactions related to smart contracts, such as fetching the contract's ABI (Application Binary Interface).
 *
 * @class
 */
class Contract {
    /**
     * Fetches the ABI (Application Binary Interface) of a contract by its address.
     *
     * The ABI is required for interacting with the smart contract, and it contains
     * information about the contract's functions, events, and other properties.
     *
     * @async
     * @param {string} contractAddress - The smart contract address on the blockchain.
     * @returns {Promise<ApiResponse<GetContractAbiData>>} - A promise that resolves to the ABI of the contract, or an error if the ABI cannot be fetched.
     * @throws {Error} - If the network or contract address is invalid or if the ABI could not be retrieved.
     *
     * @example
     * const abi = await contract.getContractABI('1', '0x..');
     * console.log(abi);
     */
    static async getContractABI(contractAddress) {
        const chainId = Client_js_1.Client.getChainId();
        const apiKey = Client_js_1.Client.getApiKey();
        return await (0, contract_api_js_1.getContractABI)(chainId, contractAddress, apiKey);
    }
}
exports.Contract = Contract;
